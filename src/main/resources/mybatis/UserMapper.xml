<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rbacsystem.mapper.UserMapper">
    <!-- Result Maps -->
    <resultMap id="userResultMap" type="com.example.rbacsystem.model.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="enabled" column="enabled"/>
        <collection property="roles" ofType="com.example.rbacsystem.model.Role"
                    select="findRolesByUserId" column="id"/>
    </resultMap>

    <resultMap id="roleResultMap" type="com.example.rbacsystem.model.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
    </resultMap>

    <!-- Reusable SQL fragments -->
    <sql id="userColumns">id, username, password, enabled</sql>

    <!-- Complex queries -->
    <select id="findRolesByUserId" resultMap="roleResultMap">
        SELECT r.id, r.name, r.description
        FROM roles r
        INNER JOIN user_roles ur ON r.id = ur.role_id
        WHERE ur.user_id = #{userId}
    </select>

    <select id="findByUsername" resultMap="userResultMap">
        SELECT <include refid="userColumns"/>
        FROM users
        WHERE username = #{username}
    </select>

    <select id="existsByUsername" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM users
        WHERE username = #{username}
    </select>

    <select id="findById" resultMap="userResultMap">
        SELECT <include refid="userColumns"/>
        FROM users
        WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="userResultMap">
        SELECT <include refid="userColumns"/>
        FROM users
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, password, enabled)
        VALUES (#{username}, #{password}, #{enabled})
    </insert>

    <update id="update">
        UPDATE users
        SET username = #{username},
            password = #{password},
            enabled = #{enabled}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <insert id="addUserRole">
        INSERT INTO user_roles (user_id, role_id)
        VALUES (#{userId}, #{roleId})
    </insert>

    <delete id="removeUserRole">
        DELETE FROM user_roles
        WHERE user_id = #{userId} AND role_id = #{roleId}
    </delete>
</mapper>
